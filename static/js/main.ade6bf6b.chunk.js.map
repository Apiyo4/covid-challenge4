{"version":3,"sources":["Home.js","InputForm.js","CopyEstimator.js","Estimates.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","console","log","className","id","to","onClick","history","push","withRouter","newData","setNewData","useState","name","avgAge","avgDailyIncomeInUSD","avgDailyIncomePopulation","periodType","timeToElapse","reportedCases","population","totalHospitalBeds","formData","setFormData","handleChange","e","target","value","type","placeholder","onChange","preventDefault","region","parseFloat","parseInt","getNumberOfDays","days","dayType","Math","trunc","getDays","covid19ImpactEstimatorCopy","data","newObj","impact","severeImpact","currentlyInfected","infectionsByRequestedTime","severeCasesByRequestedTime","floor","hospitalBedsByRequestedTime","casesForICUByRequestedTime","casesForVentilatorsByRequestedTime","dollarsInFlight","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ade6bf6b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Home(props){\r\n console.log(props)\r\n    const goToInputPage = ()=>{\r\n        props.history.push('/form')\r\n    }\r\n    return (\r\n      <div className=\"home\">\r\n        <nav className=\"navi\">\r\n          <Link id=\"link\" to=\"/form\">\r\n            Estimate Calculator\r\n          </Link>\r\n          <Link id=\"link\" to=\"/estimates\">\r\n            Covid-19 Estimated Data\r\n          </Link>\r\n        </nav>\r\n        <h1>Coronavirus disease (COVIDâ€‘19)</h1>\r\n        <div className=\"displayFlex\">\r\n          <div className=\"divHome\">\r\n            <h3>Overview</h3>\r\n            <p>\r\n              Coronavirus disease causes respiratory illness (like the flu) with\r\n              symptoms such as a cough, fever, and in more severe cases,\r\n              difficulty breathing. You can protect yourself by washing your\r\n              hands frequently, avoiding touching your face, and avoiding close\r\n              contact (1 meter or 3 feet) with people who are unwell.\r\n            </p>\r\n          </div>\r\n          <div className=\"divHome\">\r\n            <h3>How it spreads</h3>\r\n            <p>\r\n              Coronavirus disease spreads primarily through contact with an\r\n              infected person when they cough or sneeze. It also spreads when a\r\n              person touches a surface or object that has the virus on it, then\r\n              touches their eyes, nose, or mouth.\r\n            </p>\r\n          </div>\r\n          <div className=\"divHome startAlign\">\r\n            <h3>How to keep safe</h3>\r\n            <p>\r\n              <strong>1. STAY</strong> home as much as you can\r\n            </p>\r\n            <p>\r\n              <strong>2. KEEP</strong> a safe distance\r\n            </p>\r\n            <p>\r\n              <strong>3. WASH</strong> hands often\r\n            </p>\r\n            <p>\r\n              <strong>4. COVER</strong> your cough\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button onClick={goToInputPage}>Estimator calculator</button>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\n\r\nconst InputForm = (props)=>{\r\n const {newData, setNewData} = props;\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        avgAge: '',\r\n        avgDailyIncomeInUSD: '',\r\n        avgDailyIncomePopulation: '',\r\n        periodType: 'days',\r\n      timeToElapse: '',\r\n      reportedCases: '',\r\n      population: '',\r\n      totalHospitalBeds: ''\r\n    });\r\n    const handleChange = (e)=>{\r\n        setFormData({...formData, [e.target.name]: e.target.value})\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        const name= formData.name;\r\n        const avgAge = formData.avgAge;\r\n        const avgDailyIncomeInUSD = formData.avgDailyIncomeInUSD;\r\n        const avgDailyIncomePopulation = formData.avgDailyIncomePopulation;\r\n        const periodType = formData.periodType;\r\n        const timeToElapse =  formData.timeToElapse;\r\n        const reportedCases = formData.reportedCases;\r\n        const population = formData.population;\r\n        const totalHospitalBeds =  formData.totalHospitalBeds;\r\n        setNewData({\r\n          ...newData,\r\n          region: {\r\n            name: name,\r\n            avgAge: parseFloat(avgAge) ,\r\n            avgDailyIncomeInUSD: parseFloat(avgDailyIncomeInUSD),\r\n            avgDailyIncomePopulation: parseFloat(avgDailyIncomePopulation),\r\n          },\r\n          periodType: periodType,\r\n          timeToElapse: parseInt(timeToElapse),\r\n          reportedCases: parseInt(reportedCases),\r\n          population: parseInt(population),\r\n          totalHospitalBeds: parseInt(totalHospitalBeds)\r\n        });\r\n        setFormData({\r\n          name: '',\r\n          avgAge: '',\r\n          avgDailyIncomeInUSD: '',\r\n          avgDailyIncomePopulation: '',\r\n          periodType: 'days',\r\n          timeToElapse: '',\r\n          reportedCases: '',\r\n          population: '',\r\n          totalHospitalBeds: ''\r\n        });\r\n        props.history.push('/estimates')\r\n    }\r\n    return (\r\n      <div className=\"iForm\">\r\n        <nav className=\"navi\">\r\n          <Link id=\"link\" to=\"/\">\r\n            Home\r\n          </Link>\r\n          <Link id=\"link\" to=\"/estimates\">\r\n            Covid-19 Estimated Data\r\n          </Link>\r\n        </nav>\r\n        <h1>Estimation Calculator</h1>\r\n        <form>\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter the region's name\"\r\n              value={formData.name}\r\n              name=\"name\"\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter average age of the population\"\r\n              value={formData.avgAge}\r\n              name=\"avgAge\"\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter average daily income in US dollars\"\r\n              value={formData.avgDailyIncomeInUSD}\r\n              name=\"avgDailyIncomeInUSD\"\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter the average daily income of the population in dolars\"\r\n              value={formData.avgDailyIncomePopulation}\r\n              name=\"avgDailyIncomePopulation\"\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter the duration you want to estimate\"\r\n              value={formData.timeToElapse}\r\n              name=\"timeToElapse\"\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <select\r\n              name=\"periodType\"\r\n              value={formData.periodType}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"days\">Days</option>\r\n              <option value=\"weeks\">Weeks</option>\r\n              <option value=\"months\">Months</option>\r\n            </select>\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter number of reported cases\"\r\n              value={formData.reportedCases}\r\n              name=\"reportedCases\"\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter the population of the region\"\r\n              value={formData.population}\r\n              name=\"population\"\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter number of beds in the region\"\r\n              value={formData.totalHospitalBeds}\r\n              name=\"totalHospitalBeds\"\r\n              onChange={handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <button onClick={handleSubmit}>Estimate</button>\r\n        </form>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(InputForm);","// eslint-disable-next-line consistent-return\r\nconst getNumberOfDays = (days, dayType) => {\r\n  if (dayType === 'days') {\r\n    return Math.trunc(days / 3);\r\n  }\r\n  if (dayType === 'months') {\r\n    return Math.trunc((days * 30) / 3);\r\n  }\r\n  if (dayType === 'weeks') {\r\n    return Math.trunc((days / 3) * 7);\r\n  }\r\n};\r\n// eslint-disable-next-line consistent-return\r\nconst getDays = (days, dayType) => {\r\n  if (dayType === 'days') {\r\n    return Math.trunc(days);\r\n  }\r\n  if (dayType === 'months') {\r\n    return Math.trunc(days * 30);\r\n  }\r\n  if (dayType === 'weeks') {\r\n    return Math.trunc(days * 7);\r\n  }\r\n};\r\nconst covid19ImpactEstimatorCopy = (data) => {\r\n  const newObj = {\r\n    data: {},\r\n    impact: {},\r\n    severeImpact: {}\r\n  };\r\n  //   challenge 1\r\n  newObj.impact.currentlyInfected = data.reportedCases * 10;\r\n  newObj.severeImpact.currentlyInfected = data.reportedCases * 50;\r\n  newObj.impact.infectionsByRequestedTime =\r\n    newObj.impact.currentlyInfected *\r\n    2 ** getNumberOfDays(data.timeToElapse, data.periodType);\r\n  newObj.severeImpact.infectionsByRequestedTime =\r\n    newObj.severeImpact.currentlyInfected *\r\n    2 ** getNumberOfDays(data.timeToElapse, data.periodType);\r\n\r\n  // challenge 2\r\n  newObj.impact.severeCasesByRequestedTime = Math.floor(\r\n    (15 / 100) * newObj.impact.infectionsByRequestedTime\r\n  );\r\n  newObj.severeImpact.severeCasesByRequestedTime = Math.floor(\r\n    (15 / 100) * newObj.severeImpact.infectionsByRequestedTime\r\n  );\r\n  newObj.impact.hospitalBedsByRequestedTime = Math.trunc(\r\n    data.totalHospitalBeds * 0.35 - newObj.impact.severeCasesByRequestedTime\r\n  );\r\n  newObj.severeImpact.hospitalBedsByRequestedTime = Math.trunc(\r\n    data.totalHospitalBeds * 0.35 -\r\n      newObj.severeImpact.severeCasesByRequestedTime\r\n  );\r\n\r\n  // challenge 3\r\n  newObj.impact.casesForICUByRequestedTime = Math.trunc(\r\n    (newObj.impact.infectionsByRequestedTime * 5) / 100\r\n  );\r\n  newObj.severeImpact.casesForICUByRequestedTime = Math.floor(\r\n    0.05 * newObj.severeImpact.infectionsByRequestedTime\r\n  );\r\n  newObj.impact.casesForVentilatorsByRequestedTime = Math.floor(\r\n    0.02 * newObj.impact.infectionsByRequestedTime\r\n  );\r\n  newObj.severeImpact.casesForVentilatorsByRequestedTime = Math.floor(\r\n    0.02 * newObj.severeImpact.infectionsByRequestedTime\r\n  );\r\n  newObj.impact.dollarsInFlight = Math.floor(\r\n    Math.floor(\r\n      newObj.impact.infectionsByRequestedTime *\r\n        data.region.avgDailyIncomePopulation *\r\n        data.region.avgDailyIncomeInUSD\r\n    ) / getDays(data.timeToElapse, data.periodType)\r\n  );\r\n  newObj.severeImpact.dollarsInFlight = Math.floor(\r\n    Math.floor(\r\n      newObj.severeImpact.infectionsByRequestedTime *\r\n        data.region.avgDailyIncomePopulation *\r\n        data.region.avgDailyIncomeInUSD\r\n    ) / getDays(data.timeToElapse, data.periodType)\r\n  );\r\n  return newObj;\r\n};\r\n\r\nexport default covid19ImpactEstimatorCopy;\r\n","import React from 'react';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport covid19ImpactEstimatorCopy from './CopyEstimator';\r\n\r\nconst Estimates = (props)=>{\r\n    const {newData} = props\r\n    console.log(covid19ImpactEstimatorCopy(newData).impact);\r\n\r\n    \r\n    return (\r\n      <div className=\"tableH2\">\r\n        <nav className=\"navi\">\r\n          <Link id=\"link\" to=\"/\">\r\n            Home\r\n          </Link>\r\n          <Link id=\"link\" to=\"/form\">\r\n            Estimate Calculator\r\n          </Link>\r\n        </nav>\r\n        <h2>Covid-19 estimations</h2>\r\n        <table>\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Impact cases</th>\r\n            <th>Severe Impact cases</th>\r\n          </tr>\r\n          <tr>\r\n            <td>Number of those currently infected</td>\r\n            <td>\r\n              {covid19ImpactEstimatorCopy(newData).impact.currentlyInfected}\r\n            </td>\r\n            <td>\r\n              {\r\n                covid19ImpactEstimatorCopy(newData).severeImpact\r\n                  .currentlyInfected\r\n              }\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>Number of infections</td>\r\n            <td>\r\n              {\r\n                covid19ImpactEstimatorCopy(newData).impact\r\n                  .infectionsByRequestedTime\r\n              }\r\n            </td>\r\n            <td>\r\n              {\r\n                covid19ImpactEstimatorCopy(newData).severeImpact\r\n                  .infectionsByRequestedTime\r\n              }\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>Number of severe cases:</td>\r\n            <td>\r\n              {\r\n                covid19ImpactEstimatorCopy(newData).impact\r\n                  .severeCasesByRequestedTime\r\n              }\r\n            </td>\r\n            <td>\r\n              {\r\n                covid19ImpactEstimatorCopy(newData).severeImpact\r\n                  .severeCasesByRequestedTime\r\n              }\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>Number of hospital beds available</td>\r\n            <td>\r\n              {\r\n                covid19ImpactEstimatorCopy(newData).impact\r\n                  .hospitalBedsByRequestedTime\r\n              }\r\n            </td>\r\n            <td>\r\n              {\r\n                covid19ImpactEstimatorCopy(newData).severeImpact\r\n                  .hospitalBedsByRequestedTime\r\n              }\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>Number of cases addmited in ICU</td>\r\n            <td>\r\n              {\r\n                covid19ImpactEstimatorCopy(newData).impact\r\n                  .casesForICUByRequestedTime\r\n              }\r\n            </td>\r\n            <td>\r\n              {\r\n                covid19ImpactEstimatorCopy(newData).severeImpact\r\n                  .casesForICUByRequestedTime\r\n              }\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>Number of cases using ventilators</td>\r\n            <td>\r\n              {\r\n                covid19ImpactEstimatorCopy(newData).impact\r\n                  .casesForVentilatorsByRequestedTime\r\n              }\r\n            </td>\r\n            <td>\r\n              {\r\n                covid19ImpactEstimatorCopy(newData).severeImpact\r\n                  .casesForVentilatorsByRequestedTime\r\n              }\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>Amount in dolars lost daily</td>\r\n            <td>\r\n              {covid19ImpactEstimatorCopy(newData).impact.dollarsInFlight}\r\n            </td>\r\n            <td>\r\n              {covid19ImpactEstimatorCopy(newData).severeImpact.dollarsInFlight}\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n}\r\nexport default withRouter(Estimates);","import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport Home from './Home';\nimport InputForm from './InputForm';\nimport { useState } from 'react';\nimport Estimates from './Estimates';\n\nfunction App() {\n  const [newData, setNewData] = useState({\n    region: {\n      name: 'Kenya',\n      avgAge: '15',\n      avgDailyIncomeInUSD: '1.3',\n      avgDailyIncomePopulation: '0.5'\n    },\n    periodType: 'days',\n    timeToElapse: '30',\n    reportedCases: '20',\n    population: '20000000',\n    totalHospitalBeds: '482341'\n  });\n  \n  \n  return (\n    <div className=\"App\">\n      <Route exact path=\"/\" component={Home}></Route>\n      <Route\n        exact\n        path=\"/form\"\n        render={() => <InputForm newData={newData} setNewData={setNewData} />}\n      ></Route>\n    \n      <Route\n        exact\n        path=\"/estimates\"\n        render={() => <Estimates newData={newData} setNewData={setNewData} />}\n      ></Route>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}